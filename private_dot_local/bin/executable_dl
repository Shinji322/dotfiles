#!/bin/bash -x
# handles downloading any link thrown to it
# either uses ripgrep or python
ytdl='tsp yt-dlp -4vcx -N 5 --embed-metadata --sponsorblock-mark all'
rootdir="$HOME/arc/dl"
repos="$HOME/.local/repos"

#                    _         _
#  _   _  ___  _   _| |_ _   _| |__   ___
# | | | |/ _ \| | | | __| | | | '_ \ / _ \
# | |_| | (_) | |_| | |_| |_| | |_) |  __/
#  \__, |\___/ \__,_|\__|\__,_|_.__/ \___|
#  |___/
ytm() {
  # download unique music
  link="https://youtube.com/$(basename $1)"
  $ytdl --write-description --check-formats --format "(bestaudio[acodec^=opus]/bestaudio)/best" "$link"
}
ytv() {
  # download unique video
  link="https://youtube.com/$(basename $1)"
  # recommended by FrenchGhosty
  $ytdl --write-info-json --check-formats --merge-output-format "mkv" "$link"
}
ytca() {
  # archive an entire channel
  link="https://youtube.com/$(basename $1)"
  $ytdl --write-info-json --check-formats --merge-output-format "mkv" --output "%(uploader)s/%(uploader)s - %(upload_date)s - %(title)s/%(uploader)s - %(upload_date)s - %(title)s [%(id)s].%(ext)s" "$link"
}
ytva() {
  # archives a video
  link="https://youtube.com/$(basename $1)"
  $ytdl --write-info-json --check-formats --merge-output-format "mkv" --get-comments --output "%(title)s - %(uploader)s - %(upload_date)s/%(title)s - %(uploader)s - %(upload_date)s [%(id)s].%(ext)s" "$link"
}
ytp() {
  link="https://youtube.com/$(basename $1)"
  $ytdl --check-formats --format '(bestaudio[acodec^=opus]/bestaudio)/best' --output '%(playlist)s/%(playlist_index)s-%(title)s.%(ext)s' "$link"
}
ythandle() {
  icon="ï…§"
  if [ -n "$audio" ]; then
    ytm "$1"
  elif [ -n "$video" ]; then
    ytv "$1"
  else
    option="$(printf '%s\n%s\n%s\n%s\n%s\n' 'Channel' 'Music' 'Music Playlist' 'Video' 'Video (archive)' | fzf)"
    case "$option" in
    'Channel') ytca "$1" ;;
    'Music Playlist') ytp "$1" ;;
    'Music') ytm "$1" ;;
    'Video') ytv "$1" ;;
    'Video (archive)') ytva "$1" ;;
    *) exit 1 ;;
    esac
  fi
}

main() {
  tty -s && menu='fzf' || menu='rofi -dmenu'
  while test $# -gt 0; do
    case "$1" in
    -l | --link)
      grep -Eq '.*(youtube|yewtu.be|invidious).*' <<<"$2" && ltype='yt'
      grep -Eq '.*(twitter|nitter).*' <<<"$2" && ltype='tw'
      link="$2"
      shift 2
      ;;
    -a | --audio)
      audio=true
      shift 1
      ;;
    -v | --video)
      video=true
      shift 1
      ;;
    *)
      usage
      exit 1
      ;;
    esac
  done

  case "$ltype" in
  'yt')
    ythandle "$link"
    ;;
  'tw')
    echo 2 or 3
    ;;
  *)
    echo default
    ;;
  esac
  tsp -d notify-send "$icon Finished downloading $link"
}

main $@ >~/.cache/dl.log
